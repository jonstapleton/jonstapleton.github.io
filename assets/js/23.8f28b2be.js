(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{327:function(e,t,o){"use strict";o.r(t);var r=o(14),a=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"toward-rhizomatic-curriculum-design"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#toward-rhizomatic-curriculum-design"}},[e._v("#")]),e._v(" Toward Rhizomatic Curriculum Design")]),e._v(" "),t("p",[e._v("This semester, I've been committed to practicing rhizomatic teaching and learning practices in my high school computer science classes. This post is an attempt to record the path that I traveled to get there. In a "),t("a",{attrs:{href:"https://jonstapleton.github.io/2021/02/20/rhizomatic-teaching-and-learning/",target:"_blank",rel:"noopener noreferrer"}},[e._v("previous post"),t("OutboundLink")],1),e._v(", I put forward a series of "),t("strong",[e._v("Landmarks")]),e._v(" that I found to be important toward the goal of implementing a "),t("strong",[e._v("rhizomatic curricular design")]),e._v(".")]),e._v(" "),t("ol",[t("li",[e._v("Acknowledge the "),t("strong",[e._v("Territory")])]),e._v(" "),t("li",[e._v("Identify "),t("strong",[e._v("Landmarks")])]),e._v(" "),t("li",[e._v("Acknowledge Your "),t("strong",[e._v("Role")])]),e._v(" "),t("li",[e._v("Draw "),t("strong",[e._v("Maps")])]),e._v(" "),t("li",[e._v("Assemble "),t("strong",[e._v("Survival Kits")])]),e._v(" "),t("li",[e._v("Install "),t("strong",[e._v("Artifacts")])]),e._v(" "),t("li",[e._v("Foster "),t("strong",[e._v("Wanderlust")])])]),e._v(" "),t("Callout",[t("template",{slot:"text"},[t("h3",[e._v("💡 Disclaimer for Deleuze & Guattari Folks")]),e._v(" "),t("p",[e._v("To be very clear to interested parties, I am "),t("i",[e._v("fully")]),e._v(' aware of the absurdity of offering a more-or-less "striated" path for people to follow toward rhizomatic learning. Indeed, the entire idea of codifying rhizomatics in a diagram such as this post is completely fraught. Unfortunately, I find myself in a position where it seems that pulling from my State-granted power is a helpful tool toward dismantling that same power. I don\'t believe my path traced here is the only path; just one tracing among many. ')])])],2),e._v(" "),t("p",[e._v("In this post, I'll break down what I mean by "),t("strong",[e._v("Acknowledge the Territory")]),e._v(' and put it context using real-life examples from my classroom. I hope to walk you through how I set up what I call a "rhizomatic curricular design", and offer some reflections on how others might do the same. I use a lot of loaded terms here: '),t("strong",[e._v("Territory")]),e._v(", "),t("strong",[e._v("Trail")]),e._v(", "),t("strong",[e._v("Border")]),e._v(", "),t("strong",[e._v("Nomad")]),e._v(", "),t("strong",[e._v("Survival Kit")]),e._v(", "),t("strong",[e._v("Location")]),e._v(", "),t("strong",[e._v("Landmark")]),e._v(", and perhaps some others. If you want a more full accounting of what these things mean in context, check out my "),t("a",{attrs:{href:"https://jonstapleton.github.io/2021/02/20/rhizomatic-teaching-and-learning/",target:"_blank",rel:"noopener noreferrer"}},[e._v("previous post"),t("OutboundLink")],1),e._v(" unpacking these terms. Here's an index of the terms for your convenience:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Location:")]),e._v(" A discrete skill or practice, something that you learn")]),e._v(" "),t("li",[t("strong",[e._v("Landmark:")]),e._v(" A location visible from a great distance; a skill or practice that you know "),t("em",[e._v("about")]),e._v(" before you know it yourself")]),e._v(" "),t("li",[t("strong",[e._v("Trail:")]),e._v(" The things you do to learn something, the course you set as you journey between locations")]),e._v(" "),t("li",[t("strong",[e._v("Map:")]),e._v(' A record of the Locations you or someone else has been and the Trails they took to get there, a tracing of a Map; a "sequence" of learning')]),e._v(" "),t("li",[t("strong",[e._v("Territory:")]),e._v(" The stretch of land you find yourself in; a content area or domain of knowledge artificially cordoned off by arbitrary Borders")]),e._v(" "),t("li",[t("strong",[e._v("Borders:")]),e._v(" Structural or institutional barriers or demarcations around Territories imposed by an authority")]),e._v(" "),t("li",[t("strong",[e._v("Nomads:")]),e._v(" Learners traveling along Trails to different Locations")]),e._v(" "),t("li",[t("strong",[e._v("Survival Kit:")]),e._v(" The things that sustain you in your journey; the tools that facilitate learning and creativity")])]),e._v(" "),t("h2",{attrs:{id:"_1a-acknowledge-territory-theory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1a-acknowledge-territory-theory"}},[e._v("#")]),e._v(" 1a. Acknowledge Territory: Theory")]),e._v(" "),t("p",[e._v("A territory (in this context) is another word for domain or subject area. "),t("strong",[e._v("Territories")]),e._v(" are stretches of wilderness hemmed in by arbitrary "),t("strong",[e._v("Borders")]),e._v('. Think of computer science, for instance. There are some things that might fall squarely in the center of a "computer science" territory, depending on your perspective. Other things are situated on the margins, and imply '),t("strong",[e._v("Trails")]),e._v(" to other "),t("strong",[e._v("Territories")]),e._v(" beyond the Borders of computer science. The "),t("strong",[e._v("Borders")]),e._v(" of any given "),t("strong",[e._v("Territory")]),e._v(" are imposed by an authority (teachers, administrators, state governments, etc.) and are constantly being contested and redrawn by people who find them inadequate (this the kind of dispostion I would like to foster in learners, referred to as "),t("strong",[e._v("Wanderlust")]),e._v(" below).")]),e._v(" "),t("p",[e._v("I find it useful to start out my curricular design process by defining the "),t("strong",[e._v("Territory")]),e._v(" I want to mostly stick within. You might map "),t("strong",[e._v("Territory")]),e._v(' onto the concept of "scope". In my experience, Territories are not often bounded by definitions of "content knowledge"; instead, they are bounded by '),t("em",[e._v("tools")]),e._v(". My teaching practice values generative creativity, and the tools I choose to provide to the students in my classes are the largest bounding force on their learning. Students also bring tools with them when they come to my class (my students are particularly good at making slideshows, a fact that fills me with dread anytime I think about it), but most of my novice coding students (for example) have engaged with precious few tools for creating their own software.")]),e._v(" "),t("h4",{attrs:{id:"tools-as-borders"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tools-as-borders"}},[e._v("#")]),e._v(" Tools as Borders")]),e._v(" "),t("p",[e._v("Lots of coding curricula out there set up "),t("strong",[e._v("Borders")]),e._v(" based on a programming language, like Python or Javascript. I find these "),t("strong",[e._v("Borders")]),e._v(" to be incredibly distant, and the "),t("strong",[e._v("Territory")]),e._v(" within them to be impossibly vast (at least for teaching beginners). Others trace the "),t("strong",[e._v("Borders")]),e._v(" of a particular tool, like Scratch, p5js,  or Sonic Pi. I think these curricula are closer to the right size. If the "),t("strong",[e._v("Territory")]),e._v(" is too big, it's easy to get lost. If it's too small, you'll end up feeling trapped. The tools I mentioned earlier work because they are not only situated within a technical domain (the language they're based on, for example), but they are also situated within a "),t("strong",[e._v("domain of practice")]),e._v(". These tools are built with someone specific in mind, and by adopting the tools you are situating yourself within the tool's "),t("strong",[e._v("Territory")]),e._v(". There's no reason you can't push against these Borders and contest the limits the tool has drawn for you; but there's no denying that the "),t("strong",[e._v("Territory")]),e._v(" bounded by Sonic Pi is smaller than the one bounded by Ruby. The fact that "),t("em",[e._v("tools assert "),t("strong",[e._v("Territories")])]),e._v(" is definitely worth unpacking further (but not here, we have seven other ideas to go through). It's important to recognize the tools that will shape your Territory early on, as those decisions will inform how you assemble your "),t("strong",[e._v("Survival Kits")]),e._v(" in step 5.")]),e._v(" "),t("h4",{attrs:{id:"entry-exit-points"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entry-exit-points"}},[e._v("#")]),e._v(" Entry & Exit Points")]),e._v(" "),t("p",[e._v("There's one really, really, important thing that I am always careful to evaluate when I choose a bounding element for my curriculum, like a tool or framing device--"),t("strong",[e._v("entry and exit points")]),e._v(". The most important thing I try to keep in mind when I set up bounding elements in my curricula is that "),t("strong",[e._v("Territories are meant to be dismantled")]),e._v(". I "),t("em",[e._v("want")]),e._v(" students in my classes to break down the borders I set up. It's the difference between building walls (which are meant to control and contain) and drawing maps, defining borders beyond which lie the promise of exploration and discovery. "),t("strong",[e._v("Borders")]),e._v(" are arbitrary, the the ethos of rhizomatic learning calls for questioning "),t("strong",[e._v("Borders")]),e._v(" and dismantling them. Students should not be hemmed in by the "),t("strong",[e._v("Borders")]),e._v("--the "),t("strong",[e._v("Territory")]),e._v(" is a scaffold that should be eventually dismantled and abandoned. But sometimes, when the "),t("strong",[e._v("Borders")]),e._v(" fall away, the territories beyond them are so hostile that learners may not be empowered to continue blazing new "),t("strong",[e._v("Trails")]),e._v(". Entry and exit points are the weak points in the "),t("strong",[e._v("Borders")]),e._v(" around the "),t("strong",[e._v("Territory")]),e._v(" you have defined--where do you imagine learners going "),t("em",[e._v("after")]),e._v(" they have chosen to escape the "),t("strong",[e._v("Territory")]),e._v("? Are there already well-worn "),t("strong",[e._v("Trails")]),e._v(" that learners can make use of? Or are they on their own? Entry and exit points facilitate "),t("em",[e._v("transfer")]),e._v(". They offer paths for learners to take their skills into new domains, new "),t("strong",[e._v("Territories")]),e._v(". They aren't prerequisites for transfer--lots of students will blaze their own "),t("strong",[e._v("Trails")]),e._v(". But I find that those students probably don't need me to scaffold their rhizomatic learning very much in the first place.")]),e._v(" "),t("h2",{attrs:{id:"_1b-acknowledge-the-territory-practice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1b-acknowledge-the-territory-practice"}},[e._v("#")]),e._v(" 1b. Acknowledge the Territory: Practice")]),e._v(" "),t("p",[e._v("For my classes this year, I chose a couple of different bounding elements to help guide the curriculum. These bounding elements have been a little different every year, but I think I'm beginning to settle on some choices that afford me pedagogical flexibility, are accessible to students, and that offer many exit ramps.")]),e._v(" "),t("h4",{attrs:{id:"coding-language-python"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#coding-language-python"}},[e._v("#")]),e._v(" Coding Language: Python")]),e._v(" "),t("p",[e._v("I really wanted to primarily teach "),t("strong",[e._v("Python")]),e._v(" this semester, at least as a starting point. I always expect students to question this boundary, but I'm pretty conversant in several different programming languages and I feel pretty comfortable being flexible. At first though, most of my students don't have a language preference so I find it useful to provide some leadership in that space. I chose Python because of its "),t("em",[e._v("paradigmatic flexibility")]),e._v(", by which I mean that Python can be used for all sorts of things. Javascript is usually my second choice; unlike Python, however, Javascript pairs its "),t("em",[e._v("paradigmatic")]),e._v(" flexibility with "),t("em",[e._v("semantic")]),e._v(" flexibility; when you traverse between JS paradigms, the way you write code changes (at least from a beginner's perspective). I find Python's semantics to be more stable, and thus providing more reliable exit ramps out of domains of practice for students seeking new kinds of projects. I also think it's useful to have situate programming languages as a common reference point for students; even if some of my students are writing things with Javascript, Lua, or something else, if they know some Python they can still communicate ideas to other students.")]),e._v(" "),t("p",[e._v("Another point worth mentioning is the fact that Python has an integrated package management system: "),t("code",[e._v("pip")]),e._v(". I know that Python's challenging dependency system is basically a meme at this point, but for my students it's really nice for them to be able to install and use packages as needed (Javascript also has this affordance in the form of NodeJS). If students are interested in making games, they can use "),t("a",{attrs:{href:"https://www.pygame.org/news",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("pygame")]),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://pygame-zero.readthedocs.io/en/stable/introduction.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("pygame-zero")]),t("OutboundLink")],1),e._v(", or "),t("a",{attrs:{href:"https://ppb.dev/",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("ppb")]),t("OutboundLink")],1),e._v(". There's even a "),t("a",{attrs:{href:"https://www.panda3d.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("3D engine with Python scripting support"),t("OutboundLink")],1),e._v(" (though I've never used it). Students can write native Android applications with "),t("a",{attrs:{href:"https://kivy.org/#home",target:"_blank",rel:"noopener noreferrer"}},[e._v("Kivy"),t("OutboundLink")],1),e._v(". Python also has a bunch of UI frameworks like "),t("a",{attrs:{href:"https://docs.python.org/3/howto/curses.html",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("curses")]),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://doc.qt.io/qtforpython/",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("PyQt")]),t("OutboundLink")],1),e._v(", or "),t("a",{attrs:{href:"https://lawsie.github.io/guizero/",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("gui-zero")]),t("OutboundLink")],1),e._v(". Other frameworks and libraries I generally find use for include "),t("a",{attrs:{href:"https://networkzero.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Network Zero"),t("OutboundLink")],1),e._v(", "),t("a",{attrs:{href:"https://flask.palletsprojects.com/en/1.1.x/",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("flask")]),t("OutboundLink")],1),e._v(", and "),t("a",{attrs:{href:"https://pyautogui.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[t("code",[e._v("pyautogui")]),t("OutboundLink")],1),e._v(" (among many others). I think a language hosting a robust community of developers invested in creating flexible, interoperable libraries is absolutely essential.")]),e._v(" "),t("h4",{attrs:{id:"domain-of-practice-embedded-development"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#domain-of-practice-embedded-development"}},[e._v("#")]),e._v(" Domain of Practice: Embedded Development")]),e._v(" "),t("p",[e._v("I change the domain of practice for my classes pretty much every time I run them. This semester, I wanted to situate the course in the domain of "),t("strong",[e._v("embedded firmware development")]),e._v(" with Adafruit's CircuitPython library. I had a couple of reasons for choosing this path. First, my students are learning remotely and many don't have access to their own computer. The school provides Chromebooks to students, but unfortunately we aren't allowed to use the Chromebook Linux kernel and thus Python was out of reach. Last semester I had students use "),t("a",{attrs:{href:"https://repl.it/~",target:"_blank",rel:"noopener noreferrer"}},[e._v("Repl.it"),t("OutboundLink")],1),e._v(", a pretty flexible online IDE. The problem with using a tool like that is that most of my students don't have fast enough internet to connect to the virtual machine, especially if they want to develop games or other things that would need to stream the virtual desktop to their Chromebooks. There are also lots of browser-based options for students to write Python, but the fact that these platforms are "),t("em",[e._v("very")]),e._v(" limited in their paradigmatic flexibility is a deal-breaker for me. I liked the idea of working with microcontrollers this semester because it would give students something "),t("em",[e._v("concrete")]),e._v(" to build with. Plus, they would not have to connect to the internet to code. My hope is that when we return to in-person school, their comfort with Python developed by working with CircuitPython will help them make use of larger Python ecosystem using the tools we have available at school.")]),e._v(" "),t("TextImageCol",{attrs:{alt:"An image of the Adafruit NeoTrellis M4 microcontroller and development platform",src:"https://cdn-shop.adafruit.com/970x728/4020-04.jpg"}},[t("p",[e._v("I chose the "),t("a",{attrs:{href:"https://learn.adafruit.com/adafruit-neotrellis-m4/circuitpython"}},[e._v("Adafruit NeoTrellis M4")]),e._v(" as the target for our CircuitPython development. I was fortunate enough to buy one for each of my students this semester to keep at their homes. I liked this option because it has a lot of built-in sensor inputs, and also has support for playing audio through the integrated headphone jack. Adafruit also has a lot of resources (of varying quality, but still) for creating things with it.")])]),e._v(" "),t("p",[e._v("Adafruit has "),t("a",{attrs:{href:"https://www.adafruit.com/?q=circuitpython+microcontroller&sort=BestMatch",target:"_blank",rel:"noopener noreferrer"}},[e._v("lots of other compelling choices"),t("OutboundLink")],1),e._v(" to check out, but I have a soft spot for DIY synthesizers so I felt drawn to this option (even though there's really no reason to believe that my students would be likewise drawn to it; alas, these are the dangers of choosing tools before you meet your students).")]),e._v(" "),t("p",[e._v("You may be asking yourself: \"If the students only have access to Chromebooks, why not just teach Javascript? Seems like a no-brainer\". You're absolutely right. I'm pretty conflicted on this topic myself. I think Javascript is a lot harder to use when you get past a certain level--in the lexicon of this post, it doesn't have good exit ramps between Territories. I might change my mind at some point. I think there's a reasonable argument to be made one way or another. I think if your students generally have fast, reliable internet and are using Chromebooks, there's not a very compelling case to be made against using something like "),t("a",{attrs:{href:"https://repl.it/~",target:"_blank",rel:"noopener noreferrer"}},[e._v("Repl.it"),t("OutboundLink")],1),e._v(" to make things that run in the browser with Javascript.")]),e._v(" "),t("h4",{attrs:{id:"tools"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[e._v("#")]),e._v(" Tools")]),e._v(" "),t("p",[e._v("Given the choices above, the materials and scope of at least my introductory coding course for this semester is set. Here's what I decided on:")]),e._v(" "),t("ul",[t("li",[e._v("Teach Python")]),e._v(" "),t("li",[e._v("CircuitPython is our library ecosystem")]),e._v(" "),t("li",[e._v("The NeoTrellis M4 is our development target")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://chrome.google.com/webstore/detail/caret/fljalecfjciodhpcledpamjachpmelml?hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("Caret"),t("OutboundLink")],1),e._v(" is our default text editor")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://chrome.google.com/webstore/detail/beagle-term/bgoacdphmdhhogadlgbhkpopljionhie?hl=en",target:"_blank",rel:"noopener noreferrer"}},[e._v("Beagle Term"),t("OutboundLink")],1),e._v(" is our serial console and Python REPL")])]),e._v(" "),t("h2",{attrs:{id:"what-s-next"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#what-s-next"}},[e._v("#")]),e._v(" What's Next")]),e._v(" "),t("p",[e._v("The next thing I did was "),t("strong",[e._v("identify Landmarks")]),e._v(". I'll go over that in a future post. If you're interested in trying this yourself as a though exercise, check out the guided reflection questions below.")]),e._v(" "),t("Callout",[t("template",{slot:"text"},[t("h3",[e._v("❔ Questions to Answer")]),e._v(" "),t("p",[e._v("If you're interested in trying this on your own, here are some questions that you might ponder:")]),e._v(" "),t("ul",[t("li",[e._v("What Territory is your course situated within?")]),e._v(" "),t("li",[e._v("What material artifacts or tools are involved in defining that Territory and its Borders?")]),e._v(" "),t("li",[e._v("Is your Territory built around a domiain of practice? What is it?")]),e._v(" "),t("li",[e._v("Can you identify Trails that lead away from the tools, material artifacts, or domains of practice which define the Territory?")])])])],2),e._v(" "),t("hr")],1)}),[],!1,null,null,null);t.default=a.exports}}]);